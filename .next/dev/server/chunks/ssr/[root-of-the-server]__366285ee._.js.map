{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///U:/ecomerce-web/lib/db.ts"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  description: string;\r\n  price: number;\r\n  category: string;\r\n  inventory: number;\r\n  lastUpdated: string;\r\n}\r\n\r\nconst PRODUCTS_FILE = path.join(process.cwd(), 'data', 'products.json');\r\n\r\n\r\nfunction ensureDataDirectory() {\r\n  const dir = path.dirname(PRODUCTS_FILE);\r\n  if (!fs.existsSync(dir)) {\r\n    fs.mkdirSync(dir, { recursive: true });\r\n  }\r\n}\r\n\r\n/**\r\n * Read all products from JSON file\r\n */\r\nexport async function getAllProducts(): Promise<Product[]> {\r\n  try {\r\n    ensureDataDirectory();\r\n    if (!fs.existsSync(PRODUCTS_FILE)) {\r\n      return [];\r\n    }\r\n    const data = fs.readFileSync(PRODUCTS_FILE, 'utf-8');\r\n    return JSON.parse(data);\r\n  } catch (error) {\r\n    console.error('Error reading products:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Get a single product by slug\r\n */\r\nexport async function getProductBySlug(slug: string): Promise<Product | null> {\r\n  const products = await getAllProducts();\r\n  return products.find((p) => p.slug === slug) || null;\r\n}\r\n\r\n/**\r\n * Get a single product by ID\r\n */\r\nexport async function getProductById(id: string): Promise<Product | null> {\r\n  const products = await getAllProducts();\r\n  return products.find((p) => p.id === id) || null;\r\n}\r\n\r\n/**\r\n * Add a new product\r\n */\r\nexport async function addProduct(product: Omit<Product, 'id' | 'lastUpdated'>): Promise<Product> {\r\n  ensureDataDirectory();\r\n  const products = await getAllProducts();\r\n  const newId = (Math.max(...products.map((p) => parseInt(p.id)), 0) + 1).toString();\r\n  const newProduct: Product = {\r\n    ...product,\r\n    id: newId,\r\n    lastUpdated: new Date().toISOString(),\r\n  };\r\n  products.push(newProduct);\r\n  fs.writeFileSync(PRODUCTS_FILE, JSON.stringify(products, null, 2));\r\n  return newProduct;\r\n}\r\n\r\n/**\r\n * Update an existing product\r\n */\r\nexport async function updateProduct(id: string, updates: Partial<Omit<Product, 'id'>>): Promise<Product | null> {\r\n  ensureDataDirectory();\r\n  const products = await getAllProducts();\r\n  const index = products.findIndex((p) => p.id === id);\r\n  if (index === -1) return null;\r\n\r\n  products[index] = {\r\n    ...products[index],\r\n    ...updates,\r\n    id: products[index].id, // Ensure ID doesn't change\r\n    lastUpdated: new Date().toISOString(),\r\n  };\r\n\r\n  fs.writeFileSync(PRODUCTS_FILE, JSON.stringify(products, null, 2));\r\n  return products[index];\r\n}\r\n\r\n/**\r\n * Get inventory statistics\r\n */\r\nexport async function getInventoryStats() {\r\n  const products = await getAllProducts();\r\n  const lowStockThreshold = 50;\r\n\r\n  return {\r\n    totalProducts: products.length,\r\n    totalInventory: products.reduce((sum, p) => sum + p.inventory, 0),\r\n    lowStockProducts: products.filter((p) => p.inventory < lowStockThreshold),\r\n    outOfStockProducts: products.filter((p) => p.inventory === 0),\r\n    categories: [...new Set(products.map((p) => p.category))],\r\n  };\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;;AAaA,MAAM,gBAAgB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAGvD,SAAS;IACP,MAAM,MAAM,4GAAI,CAAC,OAAO,CAAC;IACzB,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,MAAM;QACvB,wGAAE,CAAC,SAAS,CAAC,KAAK;YAAE,WAAW;QAAK;IACtC;AACF;AAKO,eAAe;IACpB,IAAI;QACF;QACA,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,gBAAgB;YACjC,OAAO,EAAE;QACX;QACA,MAAM,OAAO,wGAAE,CAAC,YAAY,CAAC,eAAe;QAC5C,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,EAAE;IACX;AACF;AAKO,eAAe,iBAAiB,IAAY;IACjD,MAAM,WAAW,MAAM;IACvB,OAAO,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,SAAS;AAClD;AAKO,eAAe,eAAe,EAAU;IAC7C,MAAM,WAAW,MAAM;IACvB,OAAO,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO;AAC9C;AAKO,eAAe,WAAW,OAA4C;IAC3E;IACA,MAAM,WAAW,MAAM;IACvB,MAAM,QAAQ,CAAC,KAAK,GAAG,IAAI,SAAS,GAAG,CAAC,CAAC,IAAM,SAAS,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,QAAQ;IAChF,MAAM,aAAsB;QAC1B,GAAG,OAAO;QACV,IAAI;QACJ,aAAa,IAAI,OAAO,WAAW;IACrC;IACA,SAAS,IAAI,CAAC;IACd,wGAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,UAAU,MAAM;IAC/D,OAAO;AACT;AAKO,eAAe,cAAc,EAAU,EAAE,OAAqC;IACnF;IACA,MAAM,WAAW,MAAM;IACvB,MAAM,QAAQ,SAAS,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACjD,IAAI,UAAU,CAAC,GAAG,OAAO;IAEzB,QAAQ,CAAC,MAAM,GAAG;QAChB,GAAG,QAAQ,CAAC,MAAM;QAClB,GAAG,OAAO;QACV,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;QACtB,aAAa,IAAI,OAAO,WAAW;IACrC;IAEA,wGAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,UAAU,MAAM;IAC/D,OAAO,QAAQ,CAAC,MAAM;AACxB;AAKO,eAAe;IACpB,MAAM,WAAW,MAAM;IACvB,MAAM,oBAAoB;IAE1B,OAAO;QACL,eAAe,SAAS,MAAM;QAC9B,gBAAgB,SAAS,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,SAAS,EAAE;QAC/D,kBAAkB,SAAS,MAAM,CAAC,CAAC,IAAM,EAAE,SAAS,GAAG;QACvD,oBAAoB,SAAS,MAAM,CAAC,CAAC,IAAM,EAAE,SAAS,KAAK;QAC3D,YAAY;eAAI,IAAI,IAAI,SAAS,GAAG,CAAC,CAAC,IAAM,EAAE,QAAQ;SAAG;IAC3D;AACF","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///U:/ecomerce-web/components/ProductDetailClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/ProductDetailClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ProductDetailClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///U:/ecomerce-web/components/ProductDetailClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/ProductDetailClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ProductDetailClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///U:/ecomerce-web/app/products/%5Bslug%5D/page.tsx"],"sourcesContent":["import { getAllProducts, getProductBySlug } from '@/lib/db';\r\nimport Link from 'next/link';\r\nimport { notFound } from 'next/navigation';\r\nimport ProductDetailClient from '@/components/ProductDetailClient';\r\n\r\n\r\nexport const revalidate = 60; // Revalidate every 60 seconds\r\n\r\nexport async function generateStaticParams() {\r\n  const products = await getAllProducts();\r\n  return products.map((product) => ({\r\n    slug: product.slug,\r\n  }));\r\n}\r\n\r\nexport async function generateMetadata({ params }: { params: Promise<{ slug: string }> }) {\r\n  const { slug } = await params;\r\n  const product = await getProductBySlug(slug);\r\n\r\n  if (!product) {\r\n    return { title: 'Product Not Found' };\r\n  }\r\n\r\n  return {\r\n    title: `${product.name} - EcomStore`,\r\n    description: product.description,\r\n    openGraph: {\r\n      title: product.name,\r\n      description: product.description,\r\n      type: 'website',\r\n    },\r\n  };\r\n}\r\n\r\nexport default async function ProductDetailPage({ params }: { params: Promise<{ slug: string }> }) {\r\n  const { slug } = await params;\r\n  const product = await getProductBySlug(slug);\r\n\r\n  if (!product) {\r\n    notFound();\r\n  }\r\n\r\n  const stockStatus =\r\n    product.inventory === 0 ? 'Out of Stock' : product.inventory < 50 ? 'Low Stock' : 'In Stock';\r\n\r\n  const stockColor =\r\n    product.inventory === 0\r\n      ? 'text-red-600 bg-red-50'\r\n      : product.inventory < 50\r\n        ? 'text-yellow-600 bg-yellow-50'\r\n        : 'text-green-600 bg-green-50';\r\n\r\n  return (\r\n    <div className=\"container-custom py-12\">\r\n      {/* Breadcrumb */}\r\n      <div className=\"mb-8 flex items-center gap-2 text-sm text-gray-600\">\r\n        <Link href=\"/\" className=\"hover:text-indigo-600\">\r\n          Home\r\n        </Link>\r\n        <span>/</span>\r\n        <Link href=\"/\" className=\"hover:text-indigo-600\">\r\n          Products\r\n        </Link>\r\n        <span>/</span>\r\n        <span className=\"text-gray-900 font-medium\">{product.name}</span>\r\n      </div>\r\n\r\n      {/* Info Banner */}\r\n      <div className=\"mb-8 bg-purple-50 border border-purple-200 rounded-lg p-4 text-sm text-purple-800\">\r\n        ‚öôÔ∏è <strong>This page uses ISR:</strong> Pre-rendered at build time, revalidated every 60 seconds.\r\n        Supports on-demand revalidation for price/stock updates.\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n        {/* Product Image Placeholder */}\r\n        <div className=\"md:col-span-1\">\r\n          <div className=\"aspect-square bg-gradient-to-br from-indigo-100 to-purple-100 rounded-lg flex items-center justify-center text-6xl\">\r\n            üì¶\r\n          </div>\r\n          <div className=\"mt-4 p-4 bg-gray-100 rounded-lg text-center text-sm text-gray-600\">\r\n            Product Image\r\n          </div>\r\n        </div>\r\n\r\n        {/* Product Details */}\r\n        <div className=\"md:col-span-2\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">{product.name}</h1>\r\n\r\n          <div className=\"flex items-center gap-4 mb-6\">\r\n            <span className=\"text-4xl font-bold text-indigo-600\">${product.price.toFixed(2)}</span>\r\n            <span className={`px-4 py-2 rounded-full font-semibold ${stockColor}`}>{stockStatus}</span>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\r\n            <p className=\"text-gray-700 leading-relaxed\">{product.description}</p>\r\n          </div>\r\n\r\n          {/* Product Info Grid */}\r\n          <div className=\"grid grid-cols-2 gap-4 mb-8\">\r\n            <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n              <p className=\"text-sm text-gray-600 mb-1\">Category</p>\r\n              <p className=\"font-semibold text-gray-900\">{product.category}</p>\r\n            </div>\r\n            <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n              <p className=\"text-sm text-gray-600 mb-1\">Inventory</p>\r\n              <p className=\"font-semibold text-gray-900\">{product.inventory} units</p>\r\n            </div>\r\n            <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n              <p className=\"text-sm text-gray-600 mb-1\">Product ID</p>\r\n              <p className=\"font-mono text-sm text-gray-900\">{product.id}</p>\r\n            </div>\r\n            <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n              <p className=\"text-sm text-gray-600 mb-1\">Last Updated</p>\r\n              <p className=\"text-sm text-gray-900\">{new Date(product.lastUpdated).toLocaleDateString()}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Client-side Add to Cart */}\r\n          <ProductDetailClient product={product} />\r\n\r\n          {/* Related Actions */}\r\n          <div className=\"mt-8 pt-8 border-t border-gray-200 space-y-2\">\r\n            <Link href=\"/\" className=\"btn-primary block text-center\">\r\n              ‚Üê Back to Home\r\n            </Link>\r\n            {product.inventory > 0 && (\r\n              <p className=\"text-sm text-gray-600 text-center\">\r\n                üëç This product is in stock and ready to ship!\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Related Products Section */}\r\n      <RelatedProducts productId={product.id} category={product.category} />\r\n    </div>\r\n  );\r\n}\r\n\r\nasync function RelatedProducts({ productId, category }: { productId: string; category: string }) {\r\n  const allProducts = await getAllProducts();\r\n  const related = allProducts.filter((p) => p.category === category && p.id !== productId).slice(0, 4);\r\n\r\n  if (related.length === 0) return null;\r\n\r\n  const ProductCard = (await import('@/components/ProductCard')).default;\r\n\r\n  return (\r\n    <div className=\"mt-16 pt-12 border-t border-gray-200\">\r\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-8\">Related Products</h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {related.map((product) => (\r\n          <ProductCard key={product.id} product={product} compact />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}