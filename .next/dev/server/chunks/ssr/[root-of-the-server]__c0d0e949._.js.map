{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///U:/ecomerce-web/lib/db.ts"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  description: string;\r\n  price: number;\r\n  category: string;\r\n  inventory: number;\r\n  lastUpdated: string;\r\n}\r\n\r\nconst PRODUCTS_FILE = path.join(process.cwd(), 'data', 'products.json');\r\n\r\n\r\nfunction ensureDataDirectory() {\r\n  const dir = path.dirname(PRODUCTS_FILE);\r\n  if (!fs.existsSync(dir)) {\r\n    fs.mkdirSync(dir, { recursive: true });\r\n  }\r\n}\r\n\r\n/**\r\n * Read all products from JSON file\r\n */\r\nexport async function getAllProducts(): Promise<Product[]> {\r\n  try {\r\n    ensureDataDirectory();\r\n    if (!fs.existsSync(PRODUCTS_FILE)) {\r\n      return [];\r\n    }\r\n    const data = fs.readFileSync(PRODUCTS_FILE, 'utf-8');\r\n    return JSON.parse(data);\r\n  } catch (error) {\r\n    console.error('Error reading products:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Get a single product by slug\r\n */\r\nexport async function getProductBySlug(slug: string): Promise<Product | null> {\r\n  const products = await getAllProducts();\r\n  return products.find((p) => p.slug === slug) || null;\r\n}\r\n\r\n/**\r\n * Get a single product by ID\r\n */\r\nexport async function getProductById(id: string): Promise<Product | null> {\r\n  const products = await getAllProducts();\r\n  return products.find((p) => p.id === id) || null;\r\n}\r\n\r\n/**\r\n * Add a new product\r\n */\r\nexport async function addProduct(product: Omit<Product, 'id' | 'lastUpdated'>): Promise<Product> {\r\n  ensureDataDirectory();\r\n  const products = await getAllProducts();\r\n  const newId = (Math.max(...products.map((p) => parseInt(p.id)), 0) + 1).toString();\r\n  const newProduct: Product = {\r\n    ...product,\r\n    id: newId,\r\n    lastUpdated: new Date().toISOString(),\r\n  };\r\n  products.push(newProduct);\r\n  fs.writeFileSync(PRODUCTS_FILE, JSON.stringify(products, null, 2));\r\n  return newProduct;\r\n}\r\n\r\n/**\r\n * Update an existing product\r\n */\r\nexport async function updateProduct(id: string, updates: Partial<Omit<Product, 'id'>>): Promise<Product | null> {\r\n  ensureDataDirectory();\r\n  const products = await getAllProducts();\r\n  const index = products.findIndex((p) => p.id === id);\r\n  if (index === -1) return null;\r\n\r\n  products[index] = {\r\n    ...products[index],\r\n    ...updates,\r\n    id: products[index].id, // Ensure ID doesn't change\r\n    lastUpdated: new Date().toISOString(),\r\n  };\r\n\r\n  fs.writeFileSync(PRODUCTS_FILE, JSON.stringify(products, null, 2));\r\n  return products[index];\r\n}\r\n\r\n/**\r\n * Get inventory statistics\r\n */\r\nexport async function getInventoryStats() {\r\n  const products = await getAllProducts();\r\n  const lowStockThreshold = 50;\r\n\r\n  return {\r\n    totalProducts: products.length,\r\n    totalInventory: products.reduce((sum, p) => sum + p.inventory, 0),\r\n    lowStockProducts: products.filter((p) => p.inventory < lowStockThreshold),\r\n    outOfStockProducts: products.filter((p) => p.inventory === 0),\r\n    categories: [...new Set(products.map((p) => p.category))],\r\n  };\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;;AAaA,MAAM,gBAAgB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAGvD,SAAS;IACP,MAAM,MAAM,4GAAI,CAAC,OAAO,CAAC;IACzB,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,MAAM;QACvB,wGAAE,CAAC,SAAS,CAAC,KAAK;YAAE,WAAW;QAAK;IACtC;AACF;AAKO,eAAe;IACpB,IAAI;QACF;QACA,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,gBAAgB;YACjC,OAAO,EAAE;QACX;QACA,MAAM,OAAO,wGAAE,CAAC,YAAY,CAAC,eAAe;QAC5C,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,EAAE;IACX;AACF;AAKO,eAAe,iBAAiB,IAAY;IACjD,MAAM,WAAW,MAAM;IACvB,OAAO,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,SAAS;AAClD;AAKO,eAAe,eAAe,EAAU;IAC7C,MAAM,WAAW,MAAM;IACvB,OAAO,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO;AAC9C;AAKO,eAAe,WAAW,OAA4C;IAC3E;IACA,MAAM,WAAW,MAAM;IACvB,MAAM,QAAQ,CAAC,KAAK,GAAG,IAAI,SAAS,GAAG,CAAC,CAAC,IAAM,SAAS,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,QAAQ;IAChF,MAAM,aAAsB;QAC1B,GAAG,OAAO;QACV,IAAI;QACJ,aAAa,IAAI,OAAO,WAAW;IACrC;IACA,SAAS,IAAI,CAAC;IACd,wGAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,UAAU,MAAM;IAC/D,OAAO;AACT;AAKO,eAAe,cAAc,EAAU,EAAE,OAAqC;IACnF;IACA,MAAM,WAAW,MAAM;IACvB,MAAM,QAAQ,SAAS,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACjD,IAAI,UAAU,CAAC,GAAG,OAAO;IAEzB,QAAQ,CAAC,MAAM,GAAG;QAChB,GAAG,QAAQ,CAAC,MAAM;QAClB,GAAG,OAAO;QACV,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;QACtB,aAAa,IAAI,OAAO,WAAW;IACrC;IAEA,wGAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,UAAU,MAAM;IAC/D,OAAO,QAAQ,CAAC,MAAM;AACxB;AAKO,eAAe;IACpB,MAAM,WAAW,MAAM;IACvB,MAAM,oBAAoB;IAE1B,OAAO;QACL,eAAe,SAAS,MAAM;QAC9B,gBAAgB,SAAS,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,SAAS,EAAE;QAC/D,kBAAkB,SAAS,MAAM,CAAC,CAAC,IAAM,EAAE,SAAS,GAAG;QACvD,oBAAoB,SAAS,MAAM,CAAC,CAAC,IAAM,EAAE,SAAS,KAAK;QAC3D,YAAY;eAAI,IAAI,IAAI,SAAS,GAAG,CAAC,CAAC,IAAM,EAAE,QAAQ;SAAG;IAC3D;AACF","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///U:/ecomerce-web/components/HomeClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/HomeClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/HomeClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///U:/ecomerce-web/components/HomeClient.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/HomeClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/HomeClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///U:/ecomerce-web/app/page.tsx"],"sourcesContent":["import { getAllProducts } from '@/lib/db';\r\nimport HomeClient from '@/components/HomeClient';\r\nimport { MapPin } from 'lucide-react';\r\n\r\n\r\nexport const revalidate = 3600; // Revalidate every hour (optional ISR)\r\n\r\nexport async function generateMetadata() {\r\n  return {\r\n    title: 'Home - EcomStore',\r\n    description: 'Browse our collection of quality products',\r\n    openGraph: {\r\n      title: 'EcomStore - Your Online Marketplace',\r\n      description: 'Browse our collection of quality products',\r\n    },\r\n  };\r\n}\r\n\r\nexport default async function Home() {\r\n  // Fetch data at build time\r\n  const products = await getAllProducts();\r\n\r\n  return (\r\n    <div className=\"container-custom py-12\">\r\n      {/* Hero Section */}\r\n      <div className=\"mb-12 text-center\">\r\n        <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\r\n          Welcome to <span className=\"text-indigo-600\">EcomStore</span>\r\n        </h1>\r\n        <p className=\"text-xl text-gray-600 mb-8\">\r\n          Discover premium products with cutting-edge rendering technology\r\n        </p>\r\n        <div className=\"inline-block bg-blue-50 border border-blue-200 rounded-lg p-4 text-sm text-blue-800 flex items-center gap-2\">\r\n          <div className=\"flex-shrink-0\">\r\n            <MapPin size={18} />\r\n          </div>\r\n          <span><strong>This page uses SSG:</strong> Pre-rendered at build time with client-side filtering</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Products Grid with Client-side Filtering */}\r\n      <HomeClient products={products} />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;;;;;AAGO,MAAM,aAAa,MAAM,uCAAuC;AAEhE,eAAe;IACpB,OAAO;QACL,OAAO;QACP,aAAa;QACb,WAAW;YACT,OAAO;YACP,aAAa;QACf;IACF;AACF;AAEe,eAAe;IAC5B,2BAA2B;IAC3B,MAAM,WAAW,MAAM,IAAA,2HAAc;IAErC,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;;4BAAoD;0CACrD,8OAAC;gCAAK,WAAU;0CAAkB;;;;;;;;;;;;kCAE/C,8OAAC;wBAAE,WAAU;kCAA6B;;;;;;kCAG1C,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,oNAAM;oCAAC,MAAM;;;;;;;;;;;0CAEhB,8OAAC;;kDAAK,8OAAC;kDAAO;;;;;;oCAA4B;;;;;;;;;;;;;;;;;;;0BAK9C,8OAAC,oIAAU;gBAAC,UAAU;;;;;;;;;;;;AAG5B","debugId":null}}]
}